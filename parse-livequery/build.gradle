apply plugin: 'com.android.library'
apply plugin: 'com.github.kt3k.coveralls'

def version = 4;
ext {
    bintrayRepo = 'maven'
    bintrayName = 'parse-livequery'

    publishedGroupId = 'com.github.tgio'
    libraryName = 'Parse LiveQuery'
    artifact = 'parse-livequery'

    libraryDescription = "Very simple and modern implementation, it lacks tests and extra functionality at this moment but i'm working on it."

    siteUrl = 'https://github.com/TGIO/ParseLiveQuery'
    gitUrl = 'https://github.com/TGIO/ParseLiveQuery.git'

    libraryVersion = "1.0.".concat(version.toString())

    developerId = 'tgio'
    developerName = 'Giorgi Tabatadze'
    developerEmail = 'gio.caporegime@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode = version
        versionName = libraryVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    compile 'com.android.support:support-annotations:25.1.0'

    compile 'com.squareup.okhttp3:okhttp:3.5.0'

    compile 'io.reactivex:rxjava:1.2.5'
    compile 'io.reactivex:rxandroid:1.2.1'

    compile 'com.artemzin.rxjava:proguard-rules:1.1.6.0'

    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.skyscreamer:jsonassert:1.2.3'
}

//region Code Coverage

apply plugin: 'jacoco'

jacoco {
    toolVersion "0.7.1.201405082137"
}

task jacocoTestReport(type:JacocoReport, dependsOn: ["test", "testDebugUnitTest"]) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: "${buildDir}/intermediates/classes/debug",
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    sourceDirectories = files("${buildDir.parent}/src/main/java")
    additionalSourceDirs = files([
            "${buildDir}/generated/source/buildConfig/debug",
            "${buildDir}/generated/source/r/debug"
    ])
    executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")

    reports {
        xml.enabled = false
        html.enabled = true
    }
}

//endregion

//region Coveralls

coveralls.jacocoReportPath = "${buildDir}/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"

//endregion

apply from: '../bintray.gradle';
apply from: '../install.gradle';
